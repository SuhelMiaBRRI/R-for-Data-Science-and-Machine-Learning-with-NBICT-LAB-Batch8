q()
install.packages("agricolae")
library(agricolae)
library(agricolae)
Import <-(data)
read.csv(IWM_data)
read.csv("E:/Data import/IWM data.csv")
anova("E:/Data import/IWM data.csv")
anova("E:/Data import/IWM data.csv")
View(Import)
library(agricolae)
detach("package:agricolae", unload = TRUE)
install.packages("AgroR")
library(agricolae)
detach("package:agricolae", unload = TRUE)
View(Import)
View(Import)
View(Import)
View(Import)
View(Import)
library(AgroR)
install.packages(Agricole)
install.packages("packges")
install.packages(datasets)
install.packages("agricolae")
install.packages(datasets)
libray(datasets)
library(agricolae)
read.csv("E:/Data import/IWM")
data <-read.csv("E:/Data import/IWM")
data <-read.csv("E:/Data import/IWM")
data <-read.csv("E:/Data/IWM")
data <-read.csv("E:/Data/IWM.csv")
head(data)
str(data)
dim(data)
class(data)
View(data)
View(data)
# WN_20_DAT
lm(data$WN_20_DAT~data$RP+WP_20_DAT$TR, data=data)
# WN_20_DAT
model1 <- lm(data$WN_20_DAT~data$RP+WP_20_DAT$TR, data=data)
anova <- anova(model1)
anova1 <- anova(model1)
anova1
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+WP_40_DAT$TR, data=data)
anova2 <- anova(model2)
anova2
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+WP_40_DAT$TR, data=data)
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+WP_40_DAT$TR, data=data)
anova2 <- anova(model2)
anova2
# WN_20_DAT
model1 <- lm(data$WN_20_DAT~data$RP+data$TR, data=data)
anova1 <- anova(model1)
anova1
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+WP_40_DAT$TR, data=data)
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+data$TR, data=data)
anova2 <- anova(model2)
anova2
# WW_20_g
model3 <- lm(data$WN_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
# WW_20_g
model3 <- lm(data$WN_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
# WW_20_g
model3 <- lm(data$WW_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
anova2
model3 <- lm(data$WW_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
# WW_40_g
model4 <- lm(data$WW_40_g~data$RP+data$TR, data=data)
anova4 <- anova(model4)
anova4
model5 <- lm(data$TNPH~data$RP+data$TR, data=data)
anova5 <- anova(model5)
anova5
# TNPH
model4 <- lm(data$TNPH~data$RP+data$TR, data=data)
# TNPH
model5 <- lm(data$TNPH~data$RP+data$TR, data=data)
# TNPH
model5 <- lm(data$TNPH~data$RP+data$TR, data=data)
anova5 <- anova(model5)
model6 <- lm(data$PNPH~data$RP+data$TR, data=data)
anova6 <- anova(model6)
anova6
# PNPM
model7 <- lm(data$PNPM~data$RP+data$TR, data=data)
# PNPM
model7 <- lm(data$PNPM~data$RP+data$TR, data=data)
anova7 <- anova(model7)
anova7
# PNPM
model7 <- lm(data$PNPM~data$RP+data$TR, data=data)
# PNPM
model7 <- lm(data$PNPM~data$RP+data$TR, data=data)
anova7 <- anova(model7)
anova7
# PL_cm
model8 <- lm(data$PL_cm~data$RP+data$TR, data=data)
# PL_cm
model8 <- lm(data$PL_cm~data$RP+data$TR, data=data)
anova8 <- anova(model6)
anova8
anova8 <- anova(model8)
anova8
FG_P
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model0)
anova10
# FG_P
model9 <- lm(data$FG_P~data$RP+data$TR, data=data)
anova9 <- anova(model9)
anova9
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model0)
# FG_P
model9 <- lm(data$FG_P~data$RP+data$TR, data=data)
# FG_P
model9 <- lm(data$FG_P~data$FG_P+data$TR, data=data)
anova9 <- anova(model9)
anova9
# FG_P
model9 <- lm(data$FG_P~data$RP+data$TR, data=data)
anova9 <- anova(model9)
anova9
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model0)
anova10
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model0)
anova10
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model0)
anova10
anova10 <- anova(model10)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model10)
anova10
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model10)
anova10
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
# UFG_p
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model10)
anova10
# TGW_g
model11 <- lm(data$TGW_g~data$RP+data$TR, data=data)
# TGW_g
model11 <- lm(data$TGW_g~data$RP+data$TR, data=data)
anova11 <- anova(model11)
anova11
# PH_CM
model12 <- lm(data$PH_CM~data$RP+data$TR, data=data)
anova12 <- anova(model12)
anova12
# YT_H
model13 <- lm(data$YT_H~data$RP+data$TR, data=data)
anova13 <- anova(model13)
anova13
# SY_HK
model14 <- lm(data$SY_HK~data$RP+data$TR, data=data)
anova14 <- anova(model14)
# WC_HA_TK
model15 <- lm(data$WC_HA_TK~data$RP+data$TR, data=data)
anova15 <- anova(model15)
anova15
library(AgroR)
detach("package:AgroR", unload = TRUE)
library(AgroR)
detach("package:AgroR", unload = TRUE)
library(agricolae)
detach("package:agricolae", unload = TRUE)
View(model5)
library(agricolae)
install.packages(datasets)
install.packages("agricolae")
libray(datasets)
anova15
# WC_HA_TK
model15 <- lm(data$WC_HA_TK~data$RP+data$TR, data=data)
library(AgroR)
detach("package:AgroR", unload = TRUE)
library(agricolae)
detach("package:agricolae", unload = TRUE)
View(anova1)
# Duncan test WN_20_DAT
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR,13 3.146220
# Duncan test WN_20_DAT
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR,13 3.146220)
# Duncan test WN_20_DAT
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1
View(anova1)
View(model1)
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
LSD1
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
LSD1
View(anova1)
install.packages(datasets)
install.packages("agricolae")
data <-read.csv("E:/Data/IWM.csv")
head(data)
dim(data)
# WN_20_DAT
model1 <- lm(data$WN_20_DAT~data$RP+data$TR, data=data)
# WN_40_DAT
model2 <- lm(data$WN_40_DAT~data$RP+data$TR, data=data)
anova2 <- anova(model2)
anova2
model3 <- lm(data$WW_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
model3 <- lm(data$WW_20_g~data$RP+data$TR, data=data)
anova3 <- anova(model3)
anova3
model4 <- lm(data$WW_40_g~data$RP+data$TR, data=data)
anova4 <- anova(model4)
anova4
model5 <- lm(data$TNPH~data$RP+data$TR, data=data)
anova5 <- anova(model5)
anova5
model6 <- lm(data$PNPH~data$RP+data$TR, data=data)
anova6 <- anova(model6)
anova6
model6 <- lm(data$PNPH~data$RP+data$TR, data=data)
anova6 <- anova(model6)
anova6
model7 <- lm(data$PNPM~data$RP+data$TR, data=data)
anova7 <- anova(model7)
anova7
model8 <- lm(data$PL_cm~data$RP+data$TR, data=data)
anova8 <- anova(model8)
anova8
model9 <- lm(data$FG_P~data$RP+data$TR, data=data)
anova9 <- anova(model9)
anova9
model10 <- lm(data$UFG_p~data$RP+data$TR, data=data)
anova10 <- anova(model10)
anova10
model11 <- lm(data$TGW_g~data$RP+data$TR, data=data)
anova11 <- anova(model11)
anova11
model12 <- lm(data$PH_CM~data$RP+data$TR, data=data)
anova12 <- anova(model12)
anova12
model13 <- lm(data$YT_H~data$RP+data$TR, data=data)
anova13 <- anova(model13)
anova13
model14 <- lm(data$SY_HK~data$RP+data$TR, data=data)
anova14 <- anova(model14)
anova14
model15 <- lm(data$WC_HA_TK~data$RP+data$TR, data=data)
anova15 <- anova(model15)
anova15
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1 <- duncan.test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
LSD1
DNMART1 <- duncan.test(data$WN_20_DAT, data$RP+data$TR, 13, 3.146220)
DNMART1
View(anova1)
DNMART1 <- duncan test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
LSD1
library(AgroR)
DNMART1 <- duncan test(data$WN_20_DAT, data$TR, 13, 3.146220)
DNMART1<-duncan.test(data$WN_20_DAT,data$TR,13,3.146220)
# LSD test WN_20_DAT
LSD1 <- LSD.test(data$WN_20_DAT, data$TR, 13, 3.146220)
View(anova1)
View(model1)
# duncan test WN_20_DAT
duncun.test(data$WN_20_DAT, data$TR, 13, 3.146220 )
# duncan test WN_20_DAT
DNMART1 <- duncun.test(data$WN_20_DAT, data$TR, 13, 3.146220 )
library(agricolae)
detach("package:agricolae", unload = TRUE)
detach("package:AgroR", unload = TRUE)
DNMART1
source("~/.active-rstudio-document")
q()
q()
q()
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
q()
q()
utils:::menuInstallPkgs()
q()
R <- data.frame (DS=c("1-11-23","16-11-23","1-12-23","16-12-23","1-1-24","16-1-24"))%%
mutate(DS=date%>%perse_date(formate = "%d%m%y"))
###bar plot
install.packages(ggplot2)
###bar plot
install.packages(ggplot2)
library(ggplot2)
ggplot(TOP_Y, aes(x = DS, y = Yield_t_ha)) +
geom_bar(stat = "identity", fill = "Variety") +
scale_x_discrete(labels = c("one" = "1-11-23", "two" = "16-11-23", "three" = "1-12-23",
"four"="16-12-23","five"="1-1-24","six"="16-1-24"))
attach(R)
####read data
R <-read.csv("TOP_Y.csv")
R
attach(R)
View(anova1)
View(anova14)
##### RCBD two factor Anova
R<-read.csv("TOP_LDF")
my_age=97
my_weight=60
my_height=65
my_age=97
my_weight=60
my_height=65
my_age=97
my_weight=60
my_height=65
my_age=97
my_weight=60
my_height=65
x=(my_height*my_age)/my_weight
print(x)
students_height=c(50, 55, 64, 71, 45.25)
mean(students_height)
# Calculating some health parameter
#my_age=97
#my_weight=60
#my_height=65
x=(my_height * my_age)/ my_weight
print(x)
students_height=c(50, 55, 64, 71, 45.25)
mean(students_height)
# Calculating some health parameter
my_age=97
my_weight=60
my_height=65
x=(my_height * my_age)/ my_weight
print(x)
students_height=c(50, 55, 64, 71, 45.25)
mean(students_height)
#Creating a vector using the  c() command
student_height=c(60, 69, 55, 62)
student_height
# Checking the class of the vector student.height
is.numeric(student_height)
# Checking the class of the vector student.height
is.numeric(student_height)
is.logical(student_height)
# R automatically converts numeric to text,
#when you a text item in the vector
b=c(5, 8, 2, "sv")
b
is.numeric(b)
is.character(b)
#Llogical operator TRUE when converted to
# to nemeric, TRUE converts to 1
# and FALSE converts to 0
d=c(TRUE, FALSE, FALSE,TRUE, FALSE)
d=as.numeric(d)
d
a=c(1,2,3,4,5)
a
a
is.numeric(a)
is.character(a)
a
class(a)
as.character(a)
a
class(a)
a=as.character(a)
a
class(a)
# converting numeric to logical(1 or any number
# other than 0 converts to TRUE, 0 converts to FALSE)
d
class(d)
d
d=as.logical(d)
d
e=c(1,0,0,1,0,23,-7,0)
e=c(1,0,0,1,0,23,-7,0)
e=as.logical(e)
e
# Creating sequential Vector
#Creating a vector starting from 1 to 10
my_seq=c(1:50,80,99,88,60,71)
my_seq
#Creating sequential vector using the seq() function
new_seq = c(seq(1, 10))
#Creating sequential vector using the seq() function
new_seq = c(seq(1, 10))
#Creating sequential vector using the seq() function
new_seq = c(seq(1, 10))
new_seq
#Sequence in steps of 3
new_sequence =c(seq(1, 10, by=3))
new_seq
#Creating sequential vector using the seq() function
new_seq = c(seq(10, 1))
new_seq
# vectors can have character
names=c("Elias", "Mahfuza", "Ashraf" )
# vectors can have character
names=c("Elias", "Mahfuza", "Ashraf" )
names
class.names(names)
names[2]
names[2:4]
#Assigning names to vector
my_values=(4,7,9,11)
#Assigning names to vector
my_values=c(4,7,9,11)
names(my_values)=c("a","b","c","d")
my_values
my_values['c']
setwd("C:/Users/DELL/OneDrive/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch8/RDSML-Day-6-Vectors-listsR")
#Factors in R
#Summary of numeric items
participants_age=c(78,25,68,45,48,36)
summary(participants_age)
#Findings summary of characters
profession=c("Doctor", "Teacher", "Teacher", "Businessman","Teacher")
summary(profession)
profession=factor(profession)
summary(profession)
#Putting the summary in order
birth_month=c("Jan", "Dec", "Apr", "Aug", "Jan", "Mar", "Jun", "Apr")
summary(birth_month)
birth_month_fact=factor(birth_month, ordered = TRUE,
levels = c("Jan", "Feb", "Mar", "Apr", "May",
"Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
summary(birth_month_fact)
a=c(2,4,7)
b=c("Red", "Green","Blue")
c= "Welcome"
my_list= lists(a,b,c)
my_list= list(a,b,c)
my_list
#Naming the list item
my_list= list(Pieces=a, Colors=b, c=Message)
#Naming the list item
my_list= list(Pieces=a, Colors=b, Message=c)
my_list
# calling a specific data structure
my_list[1]
# calling a specific data structure
my_list[2]
# calling a specific data structure
my_list[3]
my_list['Colors']
#Calling specific items from the data structure
my_list$Colors [2]
